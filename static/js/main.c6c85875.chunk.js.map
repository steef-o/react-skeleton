{"version":3,"sources":["hooks/useFetch.jsx","skeletons/Shimmer.jsx","skeletons/SkeletonElement.jsx","skeletons/SkeletonArticle.jsx","components/Articles.jsx","skeletons/SkeletonProfile.jsx","components/User.jsx","App.js","index.js"],"names":["useFetch","url","useState","data","setData","loading","setLoading","error","setError","useEffect","setTimeout","fetch","then","res","ok","Error","json","catch","err","message","Shimmer","className","SkeletonElement","type","classes","SkeletonArticle","themeClass","theme","Articles","map","article","title","body","id","n","SkeletonProfile","User","username","email","href","website","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAiCeA,EA/BE,SAACC,GAAS,IAAD,EACAC,mBAAS,MADT,mBACjBC,EADiB,KACXC,EADW,OAEMF,oBAAS,GAFf,mBAEjBG,EAFiB,KAERC,EAFQ,OAGEJ,mBAAS,MAHX,mBAGjBK,EAHiB,KAGVC,EAHU,KA4BxB,OAvBAC,qBAAU,WACRC,YAAW,WACTC,MAAMV,GACHW,MAAK,SAACC,GACL,IAAKA,EAAIC,GAEP,MAAMC,MAAM,8CAEd,OAAOF,EAAIG,UAEZJ,MAAK,SAACT,GACLG,GAAW,GACXF,EAAQD,GACRK,EAAS,SAEVS,OAAM,SAACC,GAENZ,GAAW,GACXE,EAASU,EAAIC,cAEhB,OACF,CAAClB,IAEG,CAAEE,OAAME,UAASE,UCtBXa,EARC,WACd,OACE,sBAAKC,UAAU,kBAAf,UACE,qBAAKA,UAAU,YADjB,QCWWC,G,MAVS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAO,mBAAeD,GAE5B,OAAO,qBAAKF,UAAWG,MCkBVC,EApBS,SAAC,GAAe,IAChCC,EAD+B,EAAZC,OACG,QAE5B,OACE,sBAAKN,UAAS,2BAAsBK,GAApC,UACE,sBAAKL,UAAU,mBAAf,UACE,cAAC,EAAD,CAAiBE,KAAK,UACtB,cAAC,EAAD,CAAiBA,KAAK,SACtB,cAAC,EAAD,CAAiBA,KAAK,SACtB,cAAC,EAAD,CAAiBA,KAAK,YAExB,cAAC,EAAD,QCSSK,EArBE,WAAO,IAAD,EACY5B,EAC/B,8CADMG,EADa,EACbA,KAAME,EADO,EACPA,QAASE,EADF,EACEA,MAIvB,OACE,sBAAKc,UAAU,WAAf,UACE,0CACClB,GACCA,EAAK0B,KAAI,SAACC,GAAD,OACP,sBAAKT,UAAU,UAAf,UACE,6BAAKS,EAAQC,QACb,4BAAID,EAAQE,SAFgBF,EAAQG,OAKzC5B,GAAW,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGwB,KAAI,SAACK,GAAD,OAAO,cAAC,EAAD,GAAsBA,MAC5D3B,GAAS,4BAAIA,EAAMY,cCOXgB,EAvBS,SAAC,GAAe,IAChCT,EAD+B,EAAZC,OACG,QAE5B,OACE,qBAAKN,UAAS,2BAAsBK,GAApC,SACE,sBAAKL,UAAU,mBAAf,UACE,8BACE,cAAC,EAAD,CAAiBE,KAAK,aAExB,gCACE,cAAC,EAAD,CAAiBA,KAAK,UACtB,cAAC,EAAD,CAAiBA,KAAK,SACtB,cAAC,EAAD,CAAiBA,KAAK,kBCQjBa,EApBF,WAAO,IAAD,EACgBpC,EAC/B,gDADMG,EADS,EACTA,KAAME,EADG,EACHA,QAASE,EADN,EACMA,MAIvB,OACE,sBAAKc,UAAU,OAAf,UACE,+CACClB,GACC,sBAAKkB,UAAU,UAAf,UACE,mCAAMlB,EAAKkC,YACX,4BAAIlC,EAAKmC,QACT,mBAAGC,KAAMpC,EAAKqC,QAAd,SAAwBrC,EAAKqC,aAGhCnC,GAAW,cAAC,EAAD,IACXE,GAAS,4BAAIA,EAAMY,cCFXsB,MAdf,WACE,OACE,sBAAKpB,UAAU,MAAf,UACE,iCACE,mDAEF,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCNRqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c6c85875.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url)\n        .then((res) => {\n          if (!res.ok) {\n            // error coming back from server\n            throw Error(\"could not fetch the data for that resource\");\n          }\n          return res.json();\n        })\n        .then((data) => {\n          setLoading(false);\n          setData(data);\n          setError(null);\n        })\n        .catch((err) => {\n          // auto catches network / connection error\n          setLoading(false);\n          setError(err.message);\n        });\n    }, 5000);\n  }, [url]);\n\n  return { data, loading, error };\n};\n\nexport default useFetch;\n","const Shimmer = () => {\n  return (\n    <div className=\"shimmer-wrapper\">\n      <div className=\"shimmer\" />;\n    </div>\n  );\n};\n\nexport default Shimmer;\n","import T from \"prop-types\";\nimport \"./Skeleton.css\";\n\nconst SkeletonElement = ({ type }) => {\n  const classes = `skeleton ${type}`;\n\n  return <div className={classes} />;\n};\n\nSkeletonElement.propTypes = {\n  type: T.oneOf([\"avatar, title, text, thumbnail\"]),\n};\n\nexport default SkeletonElement;\n","import T from \"prop-types\";\nimport Shimmer from \"./Shimmer\";\nimport SkeletonElement from \"./SkeletonElement\";\n\nconst SkeletonArticle = ({ theme }) => {\n  const themeClass = theme || \"light\";\n\n  return (\n    <div className={`skeleton-wrapper ${themeClass}`}>\n      <div className=\"skeleton-article\">\n        <SkeletonElement type=\"title\" />\n        <SkeletonElement type=\"text\" />\n        <SkeletonElement type=\"text\" />\n        <SkeletonElement type=\"text\" />\n      </div>\n      <Shimmer />\n    </div>\n  );\n};\n\nSkeletonArticle.propTypes = {\n  theme: T.oneOf([\"light, dark\"]),\n};\n\nexport default SkeletonArticle;\n","import useFetch from \"../hooks/useFetch\";\nimport SkeletonArticle from \"../skeletons/SkeletonArticle\";\n\nconst Articles = () => {\n  const { data, loading, error } = useFetch(\n    \"https://jsonplaceholder.typicode.com/posts\"\n  );\n\n  return (\n    <div className=\"articles\">\n      <h2>Articles</h2>\n      {data &&\n        data.map((article) => (\n          <div className=\"article\" key={article.id}>\n            <h3>{article.title}</h3>\n            <p>{article.body}</p>\n          </div>\n        ))}\n      {loading && [1, 2, 3, 4, 5].map((n) => <SkeletonArticle key={n} />)}\n      {error && <p>{error.message}</p>}\n    </div>\n  );\n};\n\nexport default Articles;\n","import T from \"prop-types\";\nimport SkeletonElement from \"./SkeletonElement\";\n\nconst SkeletonProfile = ({ theme }) => {\n  const themeClass = theme || \"light\";\n\n  return (\n    <div className={`skeleton-wrapper ${themeClass}`}>\n      <div className=\"skeleton-profile\">\n        <div>\n          <SkeletonElement type=\"avatar\" />\n        </div>\n        <div>\n          <SkeletonElement type=\"title\" />\n          <SkeletonElement type=\"text\" />\n          <SkeletonElement type=\"text\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSkeletonProfile.propTypes = {\n  theme: T.oneOf([\"light, dark\"]),\n};\n\nexport default SkeletonProfile;\n","import useFetch from \"../hooks/useFetch\";\nimport SkeletonProfile from \"../skeletons/SkeletonProfile\";\n\nconst User = () => {\n  const { data, loading, error } = useFetch(\n    \"https://jsonplaceholder.typicode.com/users/1\"\n  );\n\n  return (\n    <div className=\"user\">\n      <h2>User Profiles</h2>\n      {data && (\n        <div className=\"profile\">\n          <h3> {data.username}</h3>\n          <p>{data.email}</p>\n          <a href={data.website}>{data.website}</a>\n        </div>\n      )}\n      {loading && <SkeletonProfile />}\n      {error && <p>{error.message}</p>}\n    </div>\n  );\n};\nexport default User;\n","import Articles from \"./components/Articles\";\nimport User from \"./components/User\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>React Skeletons</h1>\n      </header>\n      <div className=\"content\">\n        <Articles />\n        <User />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}